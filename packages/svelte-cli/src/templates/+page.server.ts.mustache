/**
 * * This file was automatically generated by ruest-svelte-cli.
 * * If you modify it by hand, IT WILL NOT BE REGENERATED. If you wish to regenerate the file
 * * please remove it before rerunning ruest-svelte-cli.
 * */
import type { PageServerLoad } from './$types';
import { env } from '$env/dynamic/private';

const acceptMimeTypes = "{{{ acceptMimeTypes }}}"

// This function is needed to allow +page.svelte to await the result instead of the load function
async function loadData(url: URL) {
	const resp = await fetch(url, { headers: { accept: acceptMimeTypes } });
	
	if (!resp.ok) {
		return {
			statusCode: resp.status,
			statusText: resp.statusText,
			item: null,
			contentType: 'ruest_server_load_error',
		}
	}

	const item = await resp.json();
	return {
		item,
		contentType: resp.headers.get('content-type') ?? 'unknown',
		statusCode: resp.status,
		statusText: resp.statusText,
	};
}

// We need this load function instead of doing it in the +page.svelte function so the params will change and routing will work
export const load: PageServerLoad = ({ params }) => {
	const url = new URL(params.path, env.RUEST_SERVER ?? "http://localhost:8080")
	console.log(`Load URL: ${url.toString()}`);
	return {
		response: loadData(url),
	}
};